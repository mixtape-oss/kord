public final class dev/kord/voice/AudioFrame {
	public static final field Companion Ldev/kord/voice/AudioFrame$Companion;
	public static final synthetic fun box-impl ([B)Ldev/kord/voice/AudioFrame;
	public static fun constructor-impl ([B)[B
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl ([BLjava/lang/Object;)Z
	public static final fun equals-impl0 ([B[B)Z
	public final fun getData ()[B
	public fun hashCode ()I
	public static fun hashCode-impl ([B)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl ([B)Ljava/lang/String;
	public final synthetic fun unbox-impl ()[B
}

public final class dev/kord/voice/AudioFrame$Companion {
	public final fun fromData-aSqDgro ([B)[B
	public final fun getSILENCE-kgrP3dY ()[B
}

public abstract interface class dev/kord/voice/AudioProvider {
	public abstract fun provide-jrW3DvU ()[B
	public abstract fun provideFrames (Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/channels/SendChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/kord/voice/AudioProvider$DefaultImpls {
	public static fun provideFrames (Ldev/kord/voice/AudioProvider;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/channels/SendChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class dev/kord/voice/DefaultFrameInterceptor : dev/kord/voice/FrameInterceptor {
	public fun <init> (Ldev/kord/voice/FrameInterceptorContext;Ldev/kord/voice/SpeakingFlags;)V
	public synthetic fun <init> (Ldev/kord/voice/FrameInterceptorContext;Ldev/kord/voice/SpeakingFlags;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	protected final fun getContext ()Ldev/kord/voice/FrameInterceptorContext;
	public fun intercept-WK8mA6k ([BLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/kord/voice/EncryptionMode : java/lang/Enum {
	public static final field AeadAes256Gcm Ldev/kord/voice/EncryptionMode;
	public static final field AeadAes256GcmRtpsize Ldev/kord/voice/EncryptionMode;
	public static final field Companion Ldev/kord/voice/EncryptionMode$Companion;
	public static final field XSalsa20Poly1305 Ldev/kord/voice/EncryptionMode;
	public static final field XSalsa20Poly1305LiteRtpsize Ldev/kord/voice/EncryptionMode;
	public static final field XSalsa20Poly1305Suffix Ldev/kord/voice/EncryptionMode;
	public static final field XSalsa20Poly1306Lite Ldev/kord/voice/EncryptionMode;
	public static fun valueOf (Ljava/lang/String;)Ldev/kord/voice/EncryptionMode;
	public static fun values ()[Ldev/kord/voice/EncryptionMode;
}

public final class dev/kord/voice/EncryptionMode$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/voice/EncryptionMode$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/voice/EncryptionMode;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/voice/EncryptionMode;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/EncryptionMode$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class dev/kord/voice/FrameInterceptor {
	public abstract fun intercept-WK8mA6k ([BLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/kord/voice/FrameInterceptorContext {
	public fun <init> (Ldev/kord/gateway/Gateway;Ldev/kord/voice/gateway/VoiceGateway;I)V
	public final fun component1 ()Ldev/kord/gateway/Gateway;
	public final fun component2 ()Ldev/kord/voice/gateway/VoiceGateway;
	public final fun component3 ()I
	public final fun copy (Ldev/kord/gateway/Gateway;Ldev/kord/voice/gateway/VoiceGateway;I)Ldev/kord/voice/FrameInterceptorContext;
	public static synthetic fun copy$default (Ldev/kord/voice/FrameInterceptorContext;Ldev/kord/gateway/Gateway;Ldev/kord/voice/gateway/VoiceGateway;IILjava/lang/Object;)Ldev/kord/voice/FrameInterceptorContext;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getSsrc ()I
	public final fun getVoiceGateway ()Ldev/kord/voice/gateway/VoiceGateway;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/voice/SpeakingFlag : java/lang/Enum {
	public static final field Microphone Ldev/kord/voice/SpeakingFlag;
	public static final field Priority Ldev/kord/voice/SpeakingFlag;
	public static final field Soundshare Ldev/kord/voice/SpeakingFlag;
	public final fun getCode ()I
	public static fun valueOf (Ljava/lang/String;)Ldev/kord/voice/SpeakingFlag;
	public static fun values ()[Ldev/kord/voice/SpeakingFlag;
}

public final class dev/kord/voice/SpeakingFlagKt {
	public static final fun SpeakingFlags (Ljava/lang/Iterable;)Ldev/kord/voice/SpeakingFlags;
	public static final fun SpeakingFlags (Lkotlin/jvm/functions/Function1;)Ldev/kord/voice/SpeakingFlags;
	public static final fun SpeakingFlags ([Ldev/kord/voice/SpeakingFlag;)Ldev/kord/voice/SpeakingFlags;
	public static final fun SpeakingFlags ([Ldev/kord/voice/SpeakingFlags;)Ldev/kord/voice/SpeakingFlags;
	public static final fun SpeakingFlagsWithIterable (Ljava/lang/Iterable;)Ldev/kord/voice/SpeakingFlags;
}

public final class dev/kord/voice/SpeakingFlags {
	public static final field Companion Ldev/kord/voice/SpeakingFlags$Companion;
	public final fun contains (Ldev/kord/voice/SpeakingFlag;)Z
	public final fun contains (Ldev/kord/voice/SpeakingFlags;)Z
	public final fun copy (Lkotlin/jvm/functions/Function1;)Ldev/kord/voice/SpeakingFlags;
	public final fun getCode ()I
	public final fun getFlags ()Ljava/util/List;
	public final fun minus (Ldev/kord/voice/SpeakingFlag;)Ldev/kord/voice/SpeakingFlags;
	public final fun minus (Ldev/kord/voice/SpeakingFlags;)Ldev/kord/voice/SpeakingFlags;
	public final fun plus (Ldev/kord/voice/SpeakingFlag;)Ldev/kord/voice/SpeakingFlags;
	public final fun plus (Ldev/kord/voice/SpeakingFlags;)Ldev/kord/voice/SpeakingFlags;
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/voice/SpeakingFlags$Builder {
	public fun <init> ()V
	public fun <init> (I)V
	public synthetic fun <init> (IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun flags ()Ldev/kord/voice/SpeakingFlags;
	public final fun unaryMinus (Ldev/kord/voice/SpeakingFlag;)V
	public final fun unaryMinus (Ldev/kord/voice/SpeakingFlags;)V
	public final fun unaryPlus (Ldev/kord/voice/SpeakingFlag;)V
	public final fun unaryPlus (Ldev/kord/voice/SpeakingFlags;)V
}

public final class dev/kord/voice/SpeakingFlags$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/VoiceConnection : kotlinx/coroutines/CoroutineScope {
	public fun <init> (Ldev/kord/gateway/Gateway;Ldev/kord/voice/gateway/VoiceGateway;Ldev/kord/voice/VoiceConnectionData;Ldev/kord/voice/gateway/VoiceGatewayConfiguration;Ldev/kord/voice/AudioProvider;Lkotlin/jvm/functions/Function1;Lkotlinx/coroutines/CoroutineDispatcher;)V
	public final fun connect ()Lkotlinx/coroutines/Job;
	public final fun disconnect (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getAudioProvider ()Ldev/kord/voice/AudioProvider;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getData ()Ldev/kord/voice/VoiceConnectionData;
	public final fun getFrameInterceptorFactory ()Lkotlin/jvm/functions/Function1;
	public final fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getVoiceGateway ()Ldev/kord/voice/gateway/VoiceGateway;
	public final fun getVoiceGatewayConfiguration ()Ldev/kord/voice/gateway/VoiceGatewayConfiguration;
	public final fun leave (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun setVoiceGatewayConfiguration (Ldev/kord/voice/gateway/VoiceGatewayConfiguration;)V
}

public final class dev/kord/voice/VoiceConnectionBuilder {
	public fun <init> (Ldev/kord/gateway/Gateway;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;)V
	public final fun audioProvider (Ldev/kord/voice/AudioProvider;)V
	public final fun build (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun frameInterceptor (Lkotlin/jvm/functions/Function1;)V
	public final fun getAudioProvider ()Ldev/kord/voice/AudioProvider;
	public final fun getChannelId ()Ldev/kord/common/entity/Snowflake;
	public final fun getClient ()Lio/ktor/client/HttpClient;
	public final fun getDefaultDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getFrameInterceptorFactory ()Lkotlin/jvm/functions/Function1;
	public final fun getGateway ()Ldev/kord/gateway/Gateway;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getSelfDeaf ()Z
	public final fun getSelfId ()Ldev/kord/common/entity/Snowflake;
	public final fun getSelfMute ()Z
	public final fun setAudioProvider (Ldev/kord/voice/AudioProvider;)V
	public final fun setChannelId (Ldev/kord/common/entity/Snowflake;)V
	public final fun setClient (Lio/ktor/client/HttpClient;)V
	public final fun setDefaultDispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)V
	public final fun setFrameInterceptorFactory (Lkotlin/jvm/functions/Function1;)V
	public final fun setGateway (Ldev/kord/gateway/Gateway;)V
	public final fun setGuildId (Ldev/kord/common/entity/Snowflake;)V
	public final fun setSelfDeaf (Z)V
	public final fun setSelfId (Ldev/kord/common/entity/Snowflake;)V
	public final fun setSelfMute (Z)V
	public final fun voiceGateway (Lkotlin/jvm/functions/Function1;)V
}

public final class dev/kord/voice/VoiceConnectionData {
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;)Ldev/kord/voice/VoiceConnectionData;
	public static synthetic fun copy$default (Ldev/kord/voice/VoiceConnectionData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/voice/VoiceConnectionData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getSelfId ()Ldev/kord/common/entity/Snowflake;
	public final fun getSessionId ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/voice/VoiceConnectionKt {
	public static final fun VoiceConnection (Ldev/kord/gateway/Gateway;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun VoiceConnection$default (Ldev/kord/gateway/Gateway;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class dev/kord/voice/exception/VoiceConnectionInitializationException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun <init> (Ljava/lang/Throwable;)V
}

public abstract class dev/kord/voice/gateway/Close : dev/kord/voice/gateway/VoiceEvent {
}

public final class dev/kord/voice/gateway/Close$DiscordClose : dev/kord/voice/gateway/Close {
	public fun <init> (Ldev/kord/voice/gateway/VoiceGatewayCloseCode;Z)V
	public final fun getCloseCode ()Ldev/kord/voice/gateway/VoiceGatewayCloseCode;
	public final fun getRecoverable ()Z
}

public final class dev/kord/voice/gateway/Close$Reconnecting : dev/kord/voice/gateway/Close {
	public static final field INSTANCE Ldev/kord/voice/gateway/Close$Reconnecting;
}

public final class dev/kord/voice/gateway/Close$RetryLimitReached : dev/kord/voice/gateway/Close {
	public static final field INSTANCE Ldev/kord/voice/gateway/Close$RetryLimitReached;
}

public final class dev/kord/voice/gateway/Close$Timeout : dev/kord/voice/gateway/Close {
	public static final field INSTANCE Ldev/kord/voice/gateway/Close$Timeout;
}

public final class dev/kord/voice/gateway/Close$UserClose : dev/kord/voice/gateway/Close {
	public static final field INSTANCE Ldev/kord/voice/gateway/Close$UserClose;
}

public abstract class dev/kord/voice/gateway/Command {
	public static final field Companion Ldev/kord/voice/gateway/Command$Companion;
}

public final class dev/kord/voice/gateway/Command$Companion : kotlinx/serialization/SerializationStrategy {
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/voice/gateway/Command;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class dev/kord/voice/gateway/DefaultVoiceGateway : dev/kord/voice/gateway/VoiceGateway {
	public fun <init> (Ldev/kord/voice/gateway/DefaultVoiceGatewayData;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getEvents ()Lkotlinx/coroutines/flow/SharedFlow;
	public fun getPing ()Lkotlinx/coroutines/flow/StateFlow;
	public fun send (Ldev/kord/voice/gateway/Command;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun start (Ldev/kord/voice/gateway/VoiceGatewayConfiguration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun stop (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/kord/voice/gateway/DefaultVoiceGatewayBuilder {
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;)V
	public final fun build ()Ldev/kord/voice/gateway/DefaultVoiceGateway;
	public final fun getClient ()Lio/ktor/client/HttpClient;
	public final fun getDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getEventFlow ()Lkotlinx/coroutines/flow/MutableSharedFlow;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getIdentifyRateLimiter ()Ldev/kord/common/ratelimit/RateLimiter;
	public final fun getReconnectRetry ()Ldev/kord/gateway/retry/Retry;
	public final fun getSelfId ()Ldev/kord/common/entity/Snowflake;
	public final fun getSendRateLimiter ()Ldev/kord/common/ratelimit/RateLimiter;
	public final fun getSessionId ()Ljava/lang/String;
	public final fun setClient (Lio/ktor/client/HttpClient;)V
	public final fun setDispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)V
	public final fun setEventFlow (Lkotlinx/coroutines/flow/MutableSharedFlow;)V
	public final fun setIdentifyRateLimiter (Ldev/kord/common/ratelimit/RateLimiter;)V
	public final fun setReconnectRetry (Ldev/kord/gateway/retry/Retry;)V
	public final fun setSendRateLimiter (Ldev/kord/common/ratelimit/RateLimiter;)V
}

public final class dev/kord/voice/gateway/DefaultVoiceGatewayData {
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lio/ktor/client/HttpClient;Ldev/kord/gateway/retry/Retry;Ldev/kord/common/ratelimit/RateLimiter;Ldev/kord/common/ratelimit/RateLimiter;Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/flow/MutableSharedFlow;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Lio/ktor/client/HttpClient;
	public final fun component5 ()Ldev/kord/gateway/retry/Retry;
	public final fun component6 ()Ldev/kord/common/ratelimit/RateLimiter;
	public final fun component7 ()Ldev/kord/common/ratelimit/RateLimiter;
	public final fun component8 ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun component9 ()Lkotlinx/coroutines/flow/MutableSharedFlow;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lio/ktor/client/HttpClient;Ldev/kord/gateway/retry/Retry;Ldev/kord/common/ratelimit/RateLimiter;Ldev/kord/common/ratelimit/RateLimiter;Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/flow/MutableSharedFlow;)Ldev/kord/voice/gateway/DefaultVoiceGatewayData;
	public static synthetic fun copy$default (Ldev/kord/voice/gateway/DefaultVoiceGatewayData;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Lio/ktor/client/HttpClient;Ldev/kord/gateway/retry/Retry;Ldev/kord/common/ratelimit/RateLimiter;Ldev/kord/common/ratelimit/RateLimiter;Lkotlinx/coroutines/CoroutineDispatcher;Lkotlinx/coroutines/flow/MutableSharedFlow;ILjava/lang/Object;)Ldev/kord/voice/gateway/DefaultVoiceGatewayData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getClient ()Lio/ktor/client/HttpClient;
	public final fun getDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
	public final fun getEventFlow ()Lkotlinx/coroutines/flow/MutableSharedFlow;
	public final fun getGuildId ()Ldev/kord/common/entity/Snowflake;
	public final fun getIdentifyRateLimiter ()Ldev/kord/common/ratelimit/RateLimiter;
	public final fun getReconnectRetry ()Ldev/kord/gateway/retry/Retry;
	public final fun getSelfId ()Ldev/kord/common/entity/Snowflake;
	public final fun getSendRateLimiter ()Ldev/kord/common/ratelimit/RateLimiter;
	public final fun getSessionId ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/kord/voice/gateway/Heartbeat : dev/kord/voice/gateway/Command {
	public static final field Companion Ldev/kord/voice/gateway/Heartbeat$Companion;
	public synthetic fun <init> (IJLkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (J)V
	public final fun component1 ()J
	public final fun copy (J)Ldev/kord/voice/gateway/Heartbeat;
	public static synthetic fun copy$default (Ldev/kord/voice/gateway/Heartbeat;JILjava/lang/Object;)Ldev/kord/voice/gateway/Heartbeat;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getNonce ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/kord/voice/gateway/Heartbeat;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/voice/gateway/Heartbeat$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/voice/gateway/Heartbeat$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/voice/gateway/Heartbeat;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/voice/gateway/Heartbeat;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/gateway/Heartbeat$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/gateway/HeartbeatAck : dev/kord/voice/gateway/VoiceEvent {
	public static final field Companion Ldev/kord/voice/gateway/HeartbeatAck$Companion;
	public synthetic fun <init> (IJLkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (J)V
	public final fun component1 ()J
	public final fun copy (J)Ldev/kord/voice/gateway/HeartbeatAck;
	public static synthetic fun copy$default (Ldev/kord/voice/gateway/HeartbeatAck;JILjava/lang/Object;)Ldev/kord/voice/gateway/HeartbeatAck;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getNonce ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/kord/voice/gateway/HeartbeatAck;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/voice/gateway/HeartbeatAck$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/voice/gateway/HeartbeatAck$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/voice/gateway/HeartbeatAck;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/voice/gateway/HeartbeatAck;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/gateway/HeartbeatAck$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/gateway/Hello : dev/kord/voice/gateway/VoiceEvent {
	public static final field Companion Ldev/kord/voice/gateway/Hello$Companion;
	public synthetic fun <init> (ISDLkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (SD)V
	public final fun component1 ()S
	public final fun component2 ()D
	public final fun copy (SD)Ldev/kord/voice/gateway/Hello;
	public static synthetic fun copy$default (Ldev/kord/voice/gateway/Hello;SDILjava/lang/Object;)Ldev/kord/voice/gateway/Hello;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeartbeatInterval ()D
	public final fun getVersion ()S
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/kord/voice/gateway/Hello;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/voice/gateway/Hello$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/voice/gateway/Hello$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/voice/gateway/Hello;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/voice/gateway/Hello;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/gateway/Hello$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/gateway/Identify : dev/kord/voice/gateway/Command {
	public static final field Companion Ldev/kord/voice/gateway/Identify$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ldev/kord/common/entity/Snowflake;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;)Ldev/kord/voice/gateway/Identify;
	public static synthetic fun copy$default (Ldev/kord/voice/gateway/Identify;Ldev/kord/common/entity/Snowflake;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/voice/gateway/Identify;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getServerId ()Ldev/kord/common/entity/Snowflake;
	public final fun getSessionId ()Ljava/lang/String;
	public final fun getToken ()Ljava/lang/String;
	public final fun getUserId ()Ldev/kord/common/entity/Snowflake;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/kord/voice/gateway/Identify;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/voice/gateway/Identify$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/voice/gateway/Identify$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/voice/gateway/Identify;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/voice/gateway/Identify;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/gateway/Identify$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/gateway/OpCode : java/lang/Enum {
	public static final field ClientDisconnect Ldev/kord/voice/gateway/OpCode;
	public static final field Heartbeat Ldev/kord/voice/gateway/OpCode;
	public static final field HeartbeatAck Ldev/kord/voice/gateway/OpCode;
	public static final field Hello Ldev/kord/voice/gateway/OpCode;
	public static final field Identify Ldev/kord/voice/gateway/OpCode;
	public static final field OpCodeSerializer Ldev/kord/voice/gateway/OpCode$OpCodeSerializer;
	public static final field Ready Ldev/kord/voice/gateway/OpCode;
	public static final field Resume Ldev/kord/voice/gateway/OpCode;
	public static final field Resumed Ldev/kord/voice/gateway/OpCode;
	public static final field SelectProtocol Ldev/kord/voice/gateway/OpCode;
	public static final field SessionDescription Ldev/kord/voice/gateway/OpCode;
	public static final field Speaking Ldev/kord/voice/gateway/OpCode;
	public static final field Unknown Ldev/kord/voice/gateway/OpCode;
	public final fun getCode ()I
	public static fun valueOf (Ljava/lang/String;)Ldev/kord/voice/gateway/OpCode;
	public static fun values ()[Ldev/kord/voice/gateway/OpCode;
}

public final class dev/kord/voice/gateway/OpCode$OpCodeSerializer : kotlinx/serialization/KSerializer {
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/voice/gateway/OpCode;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/voice/gateway/OpCode;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class dev/kord/voice/gateway/Ready : dev/kord/voice/gateway/VoiceEvent {
	public static final field Companion Ldev/kord/voice/gateway/Ready$Companion;
	public synthetic fun <init> (IILjava/lang/String;ILjava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (ILjava/lang/String;ILjava/util/List;)V
	public final fun component1 ()I
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()I
	public final fun component4 ()Ljava/util/List;
	public final fun copy (ILjava/lang/String;ILjava/util/List;)Ldev/kord/voice/gateway/Ready;
	public static synthetic fun copy$default (Ldev/kord/voice/gateway/Ready;ILjava/lang/String;ILjava/util/List;ILjava/lang/Object;)Ldev/kord/voice/gateway/Ready;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIp ()Ljava/lang/String;
	public final fun getModes ()Ljava/util/List;
	public final fun getPort ()I
	public final fun getSsrc ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/kord/voice/gateway/Ready;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/voice/gateway/Ready$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/voice/gateway/Ready$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/voice/gateway/Ready;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/voice/gateway/Ready;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/gateway/Ready$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/gateway/Resume : dev/kord/voice/gateway/Command {
	public static final field Companion Ldev/kord/voice/gateway/Resume$Companion;
	public synthetic fun <init> (ILdev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ldev/kord/common/entity/Snowflake;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;)Ldev/kord/voice/gateway/Resume;
	public static synthetic fun copy$default (Ldev/kord/voice/gateway/Resume;Ldev/kord/common/entity/Snowflake;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/voice/gateway/Resume;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getServerId ()Ldev/kord/common/entity/Snowflake;
	public final fun getSessionId ()Ljava/lang/String;
	public final fun getToken ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/kord/voice/gateway/Resume;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/voice/gateway/Resume$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/voice/gateway/Resume$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/voice/gateway/Resume;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/voice/gateway/Resume;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/gateway/Resume$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/gateway/Resumed : dev/kord/voice/gateway/VoiceEvent {
	public static final field INSTANCE Ldev/kord/voice/gateway/Resumed;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/gateway/SelectProtocol : dev/kord/voice/gateway/Command {
	public static final field Companion Ldev/kord/voice/gateway/SelectProtocol$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/kord/voice/gateway/SelectProtocol$Data;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/kord/voice/gateway/SelectProtocol$Data;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ldev/kord/voice/gateway/SelectProtocol$Data;
	public final fun copy (Ljava/lang/String;Ldev/kord/voice/gateway/SelectProtocol$Data;)Ldev/kord/voice/gateway/SelectProtocol;
	public static synthetic fun copy$default (Ldev/kord/voice/gateway/SelectProtocol;Ljava/lang/String;Ldev/kord/voice/gateway/SelectProtocol$Data;ILjava/lang/Object;)Ldev/kord/voice/gateway/SelectProtocol;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ldev/kord/voice/gateway/SelectProtocol$Data;
	public final fun getProtocol ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/kord/voice/gateway/SelectProtocol;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/voice/gateway/SelectProtocol$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/voice/gateway/SelectProtocol$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/voice/gateway/SelectProtocol;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/voice/gateway/SelectProtocol;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/gateway/SelectProtocol$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/gateway/SelectProtocol$Data {
	public static final field Companion Ldev/kord/voice/gateway/SelectProtocol$Data$Companion;
	public synthetic fun <init> (ILjava/lang/String;ILdev/kord/voice/EncryptionMode;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;ILdev/kord/voice/EncryptionMode;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()I
	public final fun component3 ()Ldev/kord/voice/EncryptionMode;
	public final fun copy (Ljava/lang/String;ILdev/kord/voice/EncryptionMode;)Ldev/kord/voice/gateway/SelectProtocol$Data;
	public static synthetic fun copy$default (Ldev/kord/voice/gateway/SelectProtocol$Data;Ljava/lang/String;ILdev/kord/voice/EncryptionMode;ILjava/lang/Object;)Ldev/kord/voice/gateway/SelectProtocol$Data;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAddress ()Ljava/lang/String;
	public final fun getMode ()Ldev/kord/voice/EncryptionMode;
	public final fun getPort ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/kord/voice/gateway/SelectProtocol$Data;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/voice/gateway/SelectProtocol$Data$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/voice/gateway/SelectProtocol$Data$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/voice/gateway/SelectProtocol$Data;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/voice/gateway/SelectProtocol$Data;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/gateway/SelectProtocol$Data$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/gateway/SessionDescription : dev/kord/voice/gateway/VoiceEvent {
	public static final field Companion Ldev/kord/voice/gateway/SessionDescription$Companion;
	public synthetic fun <init> (ILdev/kord/voice/EncryptionMode;Ljava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/voice/EncryptionMode;Ljava/util/List;)V
	public final fun component1 ()Ldev/kord/voice/EncryptionMode;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ldev/kord/voice/EncryptionMode;Ljava/util/List;)Ldev/kord/voice/gateway/SessionDescription;
	public static synthetic fun copy$default (Ldev/kord/voice/gateway/SessionDescription;Ldev/kord/voice/EncryptionMode;Ljava/util/List;ILjava/lang/Object;)Ldev/kord/voice/gateway/SessionDescription;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMode ()Ldev/kord/voice/EncryptionMode;
	public final fun getSecretKey ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/kord/voice/gateway/SessionDescription;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/voice/gateway/SessionDescription$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/voice/gateway/SessionDescription$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/voice/gateway/SessionDescription;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/voice/gateway/SessionDescription;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/gateway/SessionDescription$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/gateway/Speaking : dev/kord/voice/gateway/Command {
	public static final field Companion Ldev/kord/voice/gateway/Speaking$Companion;
	public synthetic fun <init> (ILdev/kord/voice/SpeakingFlags;IILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/kord/voice/SpeakingFlags;II)V
	public final fun component1 ()Ldev/kord/voice/SpeakingFlags;
	public final fun component2 ()I
	public final fun component3 ()I
	public final fun copy (Ldev/kord/voice/SpeakingFlags;II)Ldev/kord/voice/gateway/Speaking;
	public static synthetic fun copy$default (Ldev/kord/voice/gateway/Speaking;Ldev/kord/voice/SpeakingFlags;IIILjava/lang/Object;)Ldev/kord/voice/gateway/Speaking;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDelay ()I
	public final fun getSpeaking ()Ldev/kord/voice/SpeakingFlags;
	public final fun getSsrc ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun write$Self (Ldev/kord/voice/gateway/Speaking;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/kord/voice/gateway/Speaking$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/kord/voice/gateway/Speaking$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/voice/gateway/Speaking;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/kord/voice/gateway/Speaking;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/gateway/Speaking$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/kord/voice/gateway/Ticker : kotlinx/coroutines/CoroutineScope {
	public fun <init> ()V
	public fun <init> (Lkotlinx/coroutines/CoroutineDispatcher;)V
	public synthetic fun <init> (Lkotlinx/coroutines/CoroutineDispatcher;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun stop (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun tickAt (JLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class dev/kord/voice/gateway/VoiceEvent {
	public static final field Companion Ldev/kord/voice/gateway/VoiceEvent$Companion;
}

public final class dev/kord/voice/gateway/VoiceEvent$Companion : kotlinx/serialization/DeserializationStrategy {
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/kord/voice/gateway/VoiceEvent;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
}

public abstract interface class dev/kord/voice/gateway/VoiceGateway : kotlinx/coroutines/CoroutineScope {
	public static final field Companion Ldev/kord/voice/gateway/VoiceGateway$Companion;
	public abstract fun getEvents ()Lkotlinx/coroutines/flow/SharedFlow;
	public abstract fun getPing ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun send (Ldev/kord/voice/gateway/Command;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun start (Ldev/kord/voice/gateway/VoiceGatewayConfiguration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun stop (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/kord/voice/gateway/VoiceGateway$Companion {
	public final fun none ()Ldev/kord/voice/gateway/VoiceGateway;
}

public abstract class dev/kord/voice/gateway/VoiceGatewayCloseCode {
	public static final field Companion Ldev/kord/voice/gateway/VoiceGatewayCloseCode$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getCode ()I
}

public final class dev/kord/voice/gateway/VoiceGatewayCloseCode$AlreadyAuthenticated : dev/kord/voice/gateway/VoiceGatewayCloseCode {
	public static final field INSTANCE Ldev/kord/voice/gateway/VoiceGatewayCloseCode$AlreadyAuthenticated;
}

public final class dev/kord/voice/gateway/VoiceGatewayCloseCode$AuthenticationFailed : dev/kord/voice/gateway/VoiceGatewayCloseCode {
	public static final field INSTANCE Ldev/kord/voice/gateway/VoiceGatewayCloseCode$AuthenticationFailed;
}

public final class dev/kord/voice/gateway/VoiceGatewayCloseCode$Companion {
	public final fun of (I)Ldev/kord/voice/gateway/VoiceGatewayCloseCode;
}

public final class dev/kord/voice/gateway/VoiceGatewayCloseCode$Disconnect : dev/kord/voice/gateway/VoiceGatewayCloseCode {
	public static final field INSTANCE Ldev/kord/voice/gateway/VoiceGatewayCloseCode$Disconnect;
}

public final class dev/kord/voice/gateway/VoiceGatewayCloseCode$FailedToDecodePayload : dev/kord/voice/gateway/VoiceGatewayCloseCode {
	public static final field INSTANCE Ldev/kord/voice/gateway/VoiceGatewayCloseCode$FailedToDecodePayload;
}

public final class dev/kord/voice/gateway/VoiceGatewayCloseCode$NotAuthenticated : dev/kord/voice/gateway/VoiceGatewayCloseCode {
	public static final field INSTANCE Ldev/kord/voice/gateway/VoiceGatewayCloseCode$NotAuthenticated;
}

public final class dev/kord/voice/gateway/VoiceGatewayCloseCode$ServerNotFound : dev/kord/voice/gateway/VoiceGatewayCloseCode {
	public static final field INSTANCE Ldev/kord/voice/gateway/VoiceGatewayCloseCode$ServerNotFound;
}

public final class dev/kord/voice/gateway/VoiceGatewayCloseCode$SessionNoLongerValid : dev/kord/voice/gateway/VoiceGatewayCloseCode {
	public static final field INSTANCE Ldev/kord/voice/gateway/VoiceGatewayCloseCode$SessionNoLongerValid;
}

public final class dev/kord/voice/gateway/VoiceGatewayCloseCode$SessionTimeout : dev/kord/voice/gateway/VoiceGatewayCloseCode {
	public static final field INSTANCE Ldev/kord/voice/gateway/VoiceGatewayCloseCode$SessionTimeout;
}

public final class dev/kord/voice/gateway/VoiceGatewayCloseCode$Unknown : dev/kord/voice/gateway/VoiceGatewayCloseCode {
	public fun <init> (I)V
}

public final class dev/kord/voice/gateway/VoiceGatewayCloseCode$UnknownEncryptionMode : dev/kord/voice/gateway/VoiceGatewayCloseCode {
	public static final field INSTANCE Ldev/kord/voice/gateway/VoiceGatewayCloseCode$UnknownEncryptionMode;
}

public final class dev/kord/voice/gateway/VoiceGatewayCloseCode$UnknownOpcode : dev/kord/voice/gateway/VoiceGatewayCloseCode {
	public static final field INSTANCE Ldev/kord/voice/gateway/VoiceGatewayCloseCode$UnknownOpcode;
}

public final class dev/kord/voice/gateway/VoiceGatewayCloseCode$UnknownProtocol : dev/kord/voice/gateway/VoiceGatewayCloseCode {
	public static final field INSTANCE Ldev/kord/voice/gateway/VoiceGatewayCloseCode$UnknownProtocol;
}

public final class dev/kord/voice/gateway/VoiceGatewayCloseCode$VoiceServerCrashed : dev/kord/voice/gateway/VoiceGatewayCloseCode {
	public static final field INSTANCE Ldev/kord/voice/gateway/VoiceGatewayCloseCode$VoiceServerCrashed;
}

public final class dev/kord/voice/gateway/VoiceGatewayConfiguration {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Ldev/kord/voice/gateway/VoiceGatewayConfiguration;
	public static synthetic fun copy$default (Ldev/kord/voice/gateway/VoiceGatewayConfiguration;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ldev/kord/voice/gateway/VoiceGatewayConfiguration;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEndpoint ()Ljava/lang/String;
	public final fun getToken ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

